<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension
         id="com.lambda.ynature"
         name="eCommerce Nature"
         point="org.eclipse.core.resources.natures">
      <runtime>
         <run
               class="com.lambda.plugin.YNature">
         </run>
      </runtime>
   </extension>
   <extension
         point="org.eclipse.ui.importWizards">
      <category
            id="com.lambda.plugin.importWizard"
            name="eCommerce">
      </category>
      <wizard
            category="com.lambda.plugin.importWizard"
            class="com.lambda.plugin.wizards.ecommerce.ImportPlatformWizard"
            icon="icons/sample.gif"
            id="com.lambda.plugin.wizards.ecommerce.ImportPlatformWizard"
            name="eCommerce Platform">
      </wizard>
   </extension>
   <extension
         id="com.lambda.plugin.views"
         point="org.eclipse.ui.views">
      <category
            id="com.lambda.plugin"
            name="eCommerce">
      </category>
      <view
            allowMultiple="false"
            category="com.lambda.plugin"
            class="com.lambda.plugin.yunit.view.YUnitView"
            icon="icons/full/etool16/functest.png"
            id="com.lambda.plugin.yunit.view"
            name="YUnit"
            restorable="true">
      </view>
   </extension>
   <extension
         point="org.eclipse.ui.popupMenus">
      <objectContribution
            adaptable="true"
            id="com.lambda.plugin.project.menu"
            objectClass="org.eclipse.core.resources.IProject">
         <action
               class="com.lambda.plugin.actions.YActionsMenu"
               icon="icons/full/kizoom.png"
               id="com.lambda.plugin.project.menu"
               label="e&amp;Commerce"
               menubarPath="additions"
               style="pulldown">
         </action>
         <visibility>
            <and>
               <objectState
                     name="open"
                     value="true">
               </objectState>
               <objectClass
                     name="org.eclipse.core.resources.IProject">
               </objectClass>
            </and>
         </visibility>
      </objectContribution>
   </extension>
   <extension
         point="org.eclipse.ui.newWizards">
      <category
            id="com.lambda.plugin.wizard"
            name="eCommerce">
      </category>
      <wizard
            category="com.lambda.plugin.wizard"
            class="com.lambda.plugin.yunit.wizard.NewYUnitProjectWizard"
            hasPages="true"
            icon="icons/full/etool16/newfunctest_wiz.png"
            id="com.lambda.plugin.yunit.wizard.NewFunctestProjectWizard"
            name="Kizoom Functest Project"
            project="true">
         <description>
            Create Kizoom Functest project
         </description>
      </wizard>
      <wizard
            category="com.lambda.plugin.wizard"
            class="com.lambda.plugin.wizards.ecommerce.NewExtensionWizard"
            hasPages="true"
            icon="icons/full/etool16/newfunctest_wiz.png"
            id="com.lambda.plugin.wizards.ecommerce.NewExtensionWizard"
            name="eCommerce Extension"
            project="true">
         <description>
            Create eCommerce module
         </description>
      </wizard>
      <wizard
            category="com.lambda.plugin.wizard"
            class="com.lambda.plugin.wizards.ecommerce.NewModuleWizard"
            hasPages="true"
            icon="icons/full/etool16/newfunctest_wiz.png"
            id="com.lambda.plugin.wizards.ecommerce.NewModuleWizard"
            name="eCommerce Module"
            project="true">
         <description>
            Create eCommerce module
         </description>
      </wizard>
      <wizard
            category="com.lambda.plugin.wizard"
            class="com.lambda.plugin.wizards.impex.ImpexNewWizard"
            icon="icons/sample.gif"
            id="com.lambda.plugin.wizards.impex.ImpexNewWizard"
            name="Impex file">
         <description>
            Create new impex file
         </description>
      </wizard>
   </extension>
   <extension
         point="org.eclipse.ui.perspectiveExtensions">
      <perspectiveExtension
            targetID="org.eclipse.jdt.ui.JavaPerspective">
         <view
               id="com.lambda.plugin.yunit.view"
               ratio="0.5"
               relationship="right"
               relative="org.eclipse.jdt.junit.ResultView">
         </view>
      </perspectiveExtension>
   </extension>
   <extension
         point="org.eclipse.ui.decorators">
      <decorator
            adaptable="true"
            icon="icons/full/dec8/functestprj_dec.png"
            id="com.lambda.plugin.yunit.decorator"
            label="Functest Decorator"
            lightweight="true"
            location="TOP_LEFT"
            state="true">
         <enablement>
            <and>
               <objectClass
                     name="org.eclipse.core.resources.IProject">
               </objectClass>
               <objectState
                     name="nature"
                     value="com.lambda.ynature">
               </objectState>
            </and>
         </enablement>
      </decorator>
   </extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            class="com.lambda.plugin.preferences.YPreferencePage"
            id="com.lambda.plugin.preferences.YPreferencePage"
            name="eCommerce">
      </page>
      <!--
      <page
            category="com.lambda.plugin.preferences.YPreferencePage"
            class="com.lambda.plugin.preferences.PlatformPreferencePage"
            id="com.lambda.plugin.preferences.PlatformPreferencePage"
            name="Installation">
      </page>
      -->
      <page
            category="com.lambda.plugin.preferences.YPreferencePage"
            class="com.lambda.plugin.impex.preferences.ImpexPreferencePage"
            id="com.lambda.plugin.impex.preferences.ImpexPreferencePage"
            name="ImpEx">
      </page>
      <page
            category="com.lambda.plugin.preferences.YPreferencePage"
            class="com.lambda.plugin.yunit.preferences.YUnitPreferencePage"
            id="com.lambda.plugin.yunit.preferences.YUnitPreferencePage"
            name="YUnit Tests">
      </page>
      <page
            category="com.lambda.plugin.impex.preferences.ImpexPreferencePage"
            class="com.lambda.plugin.impex.preferences.SyntaxColoringPreferencePage"
            id="com.lambda.plugin.impex.preferences.SyntaxColoringPreferencePage"
            name="Syntax coloring">
      </page>
      <page
            category="com.lambda.plugin.impex.preferences.ImpexPreferencePage"
            class="com.lambda.plugin.impex.preferences.MarkOccurrencesPreferencePage"
            id="com.lambda.plugin.impex.preferences.MarkOccurrencesPreferencePage"
            name="Mark occurrences">
      </page>
   </extension>
   <extension
         id="com.lambda.plugin.preferences"
         name="eCommerce Preferences"
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="com.lambda.plugin.preferences.PreferenceInitializer">
      </initializer>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchShortcuts">
      <shortcut
            class="com.lambda.plugin.yunit.launcher.YUnitLaunchShortcut"
            icon="icons/full/etool16/run_functest.png"
            id="com.lambda.plugin.yunit.launch.shortcut"
            label="Functional Test"
            modes="run,debug">
         <contextualLaunch>
            <enablement>
               <with
                     variable="selection">
                  <count
                        value="+">
                  </count>
                  <iterate>
                     <adapt
                           type="org.eclipse.jdt.core.IJavaElement">
                        <test property="org.eclipse.jdt.core.isInJavaProject"/>
		                <test property="org.eclipse.jdt.core.hasTypeOnClasspath" value="junit.framework.Test"/>
                  <test
                        forcePluginActivation="true"
                        property="com.lambda.plugin.yunit.canLaunchAsYUnit">
                  </test>
                     </adapt>
                  </iterate>
               </with>
            </enablement>
          </contextualLaunch>
          <configurationType
               id="com.lambda.plugin.yunit.launchconfig">
         </configurationType>
      </shortcut>
   </extension>
      <extension
         point="org.eclipse.debug.core.launchConfigurationTypes">
      <launchConfigurationType
            delegate="com.lambda.plugin.yunit.launcher.YUnitLaunchConfigurationDelegate"
            delegateDescription="Run functional tests "
            delegateName="Functest Launcher"
            id="com.lambda.plugin.yunit.launchconfig"
            modes="run, debug"
            name="Functional Test"
            public="true"
            sourceLocatorId="org.eclipse.jdt.launching.sourceLocator.JavaSourceLookupDirector">
      </launchConfigurationType>
   </extension>
      <extension
            point="org.eclipse.debug.ui.launchConfigurationTabGroups">
         <launchConfigurationTabGroup
               class="com.lambda.plugin.yunit.launcher.YUnitLaunchConfigurationTabGroup"
               id="com.lambda.plugin.yunit.launchgroup"
               type="com.lambda.plugin.yunit.launchconfig">
            <launchMode
                  description="Create a configuration that will launch a Functional Test."
                  mode="run">
            </launchMode>
            <launchMode
                  description="Create a configuration that will launch a Functional Test."
                  mode="debug"
                  perspective="org.eclipse.debug.ui.DebugPerspective">
            </launchMode>
         </launchConfigurationTabGroup>
      </extension>
      <extension
            point="org.eclipse.debug.ui.launchConfigurationTypeImages">
         <launchConfigurationTypeImage
               configTypeID="com.lambda.plugin.yunit.launchconfig"
               icon="icons/full/etool16/run_functest.png"
               id="com.lambda.plugin.yunit.launchconfigimage">
         </launchConfigurationTypeImage>
      </extension>
      <extension
            point="org.eclipse.jdt.launching.classpathProviders">
         <classpathProvider
               class="com.lambda.plugin.yunit.YUnitClasspathProvider"
               id="com.lambda.plugin.yunit.FunctestClasspathProvider">
         </classpathProvider>
      </extension>
      <extension
            point="org.eclipse.core.expressions.propertyTesters">
         <propertyTester
               class="com.lambda.plugin.yunit.YUnitPropertyTester"
               id="com.lambda.plugin.yunit.FunctestLaunchPropertyTester"
               namespace="com.lambda.plugin.functest"
               properties="isFunctest,canLaunchAsFunctest"
               type="org.eclipse.core.runtime.IAdaptable">
         </propertyTester>
      </extension>
      <extension
            point="org.eclipse.ui.bindings">
            <sequenceModifier
                  find="M1+M2"
                  platforms="cocoa,carbon"
                  replace="M2+M3">
            </sequenceModifier>
         <key
               commandId="com.lambda.plugin.yunit.launch.shortcut.run"
               contextId="org.eclipse.ui.contexts.window"
               schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
               sequence="M2+M3+X F">
         </key>
         <key
               commandId="com.lambda.plugin.yunit.launch.shortcut.debug"
               contextId="org.eclipse.ui.contexts.window"
               schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
               sequence="M2+M3+D F">
         </key>
         <key
               commandId="com.lambda.plugin.impex.editor.actions.ToggleLineComment"
               contextId="org.eclipse.ui.contexts.window"
               schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
               sequence="M1+/">
         </key>
         <key
               commandId="com.lambda.plugin.impex.editor.actions.ToggleMarkOccurrences"
               contextId="org.eclipse.ui.contexts.window"
               schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
               sequence="M2+M3+O">
         </key>
      </extension>
      <extension
            point="org.eclipse.ui.commands">
         <command
               categoryId="org.eclipse.debug.ui.category.run"
               description="Run Functional Test"
               id="com.lambda.plugin.yunit.launch.shortcut.run"
               name="Run Functional Test">
         </command>
         <command
               categoryId="org.eclipse.debug.ui.category.run"
               description="Debug Functional Test"
               id="com.lambda.plugin.yunit.launch.shortcut.debug"
               name="Debug Functional Test">
         </command>
         <command
            name="Rerun Functional Tests"
            description="Rerun Functional Tests"
            categoryId="org.eclipse.debug.ui.category.run"
            id="com.lambda.plugin.yunit.launch.shortcut.rerunLast">
         </command>
         <command
            name="Rerun Functional Tests - Failures Only"
            description="Rerun Functional Tests - Failures Only"
            categoryId="org.eclipse.debug.ui.category.run"
            id="com.lambda.plugin.yunit.launch.shortcut.rerunFailed">
         </command>
         <command
               categoryId="com.lambda.plugin"
               defaultHandler="com.lambda.plugin.yunit.actions.RunFunctestsAction"
               description="Run Staging"
               id="com.lambda.plugin.yunit.RunFunctestStaging"
               name="Run Staging">
         </command>    
         <command
               categoryId="com.lambda.plugin"
               defaultHandler="com.lambda.plugin.yunit.actions.RunFunctestsAction"
               description="Run Production"
               id="com.lambda.plugin.yunit.RunFunctestProduction"
               name="Run Production">
         </command>
         <command
               categoryId="com.lambda.plugin"
               defaultHandler="com.lambda.plugin.yunit.actions.RunFunctestsAction"
               description="Run Local"
               id="com.lambda.plugin.yunit.RunFunctestLocal"
               name="Run Local">
         </command>
         <command
               categoryId="org.eclipse.ui.category.textEditor"
               defaultHandler="com.lambda.plugin.impex.editor.actions.ToggleMarkOccurrencesAction"
               description="Toggle Mark Occurrences"
               id="com.lambda.plugin.impex.editor.actions.ToggleMarkOccurrences"
               name="Toggle Mark Occurrences">
            <state
                  class="org.eclipse.ui.handlers.RegistryToggleState"
                  id="org.eclipse.ui.commands.toggleState">
            </state>
         </command>
                  <command
               categoryId="org.eclipse.ui.category.textEditor"
               description="Toggle Line Comment"
               id="com.lambda.plugin.impex.editor.actions.ToggleLineComment"
               name="Toggle Line Comment">
         </command>  
       </extension>
      <extension
            point="org.eclipse.ui.commandImages">
         <image
               commandId="com.lambda.plugin.yunit.RunFunctestProduction"
               disabledIcon="icons/full/dlcl16/run_prod.png"
               icon="icons/full/elcl16/run_prod.png">
         </image>
         <image
               commandId="com.lambda.plugin.yunit.RunFunctestStaging"
               disabledIcon="icons/full/dlcl16/run_tst.png"
               icon="icons/full/elcl16/run_tst.png">
         </image>
         <image
               commandId="com.lambda.plugin.yunit.RunFunctestLocal"
               disabledIcon="icons/full/dlcl16/run_dev.png"
               icon="icons/full/elcl16/run_dev.png">
         </image>
         <image
               commandId="com.lambda.plugin.impex.editor.actions.ToggleMarkOccurrences"
               disabledIcon="icons/full/dlcl16/mark_occurrences.gif"
               icon="icons/full/elcl16/mark_occurrences.gif">
         </image>
      </extension>
      <extension
            point="org.eclipse.ui.menus">
            
         <menuContribution
               locationURI="toolbar:org.eclipse.ui.main.toolbar">
            <toolbar
                  id="com.lambda.plugin.yunit.toolbar">
               <command
                     commandId="com.lambda.plugin.yunit.RunFunctestLocal"
                     disabledIcon="icons/full/dlcl16/run_dev.png"
                     icon="icons/full/elcl16/run_dev.png"
                     label="Run Local"
                     style="push"
                     tooltip="Run workspace functional tests against local server">
               </command>
               <command
                     commandId="com.lambda.plugin.yunit.RunFunctestStaging"
                     disabledIcon="icons/full/dlcl16/run_tst.png"
                     icon="icons/full/elcl16/run_tst.png"
                     label="Run Staging"
                     style="push"
                     tooltip="Run workspace functional tests against staging server">
               </command>
               <command
                     commandId="com.lambda.plugin.yunit.RunFunctestProduction"
                     disabledIcon="icons/full/dlcl16/run_prod.png"
                     icon="icons/full/elcl16/run_prod.png"
                     label="Run Production"
                     style="push"
                     tooltip="Run workspace functional tests against production server">
               </command>
            </toolbar>
         </menuContribution>
         <menuContribution
            locationURI="menu:org.eclipse.ui.main.menu">
        	<menu
               id="com.lambda.plugin.menu"
               label="eCommerce"
               tooltip="eCommerce">
         	</menu>
      	 </menuContribution>
         <menuContribution
               locationURI="menu:com.lambda.plugin.menu">
            <separator
                  name="com.lambda.plugin.yunit.menu.separator1"
                  visible="true">
            </separator>
            <command
                  commandId="com.lambda.plugin.yunit.RunFunctestLocal"
                  disabledIcon="icons/full/dlcl16/run_dev.png"
                  icon="icons/full/elcl16/run_dev.png"
                  label="Run Local"
                  style="push"
                  tooltip="Run workspace functional tests against local server">
            </command>
            <command
                  commandId="com.lambda.plugin.yunit.RunFunctestStaging"
                  disabledIcon="icons/full/dlcl16/run_tst.png"
                  icon="icons/full/elcl16/run_tst.png"
                  label="Run Staging"
                  style="push"
                  tooltip="Run workspace functional tests against staging server">
            </command>
            <command
                  commandId="com.lambda.plugin.yunit.RunFunctestProduction"
                  disabledIcon="icons/full/dlcl16/run_prod.png"
                  icon="icons/full/elcl16/run_prod.png"
                  label="Run Production"
                  style="push"
                  tooltip="Run workspace functional tests against production server">
            </command>
         </menuContribution>
      </extension>
      <extension
            point="org.eclipse.ui.handlers">
         <handler
               class="com.lambda.plugin.yunit.actions.RunFunctestsAction"
               commandId="com.lambda.plugin.yunit.RunFunctestLocal">
            <activeWhen>
               <with
                     variable="activeWorkbenchWindow.activePerspective">
                  <or>
                     <equals
                           value="org.eclipse.jdt.ui.JavaPerspective">
                     </equals>
                     <equals
                           value="org.eclipse.debug.ui.DebugPerspective">
                     </equals>
                  </or>
               </with></activeWhen>
         </handler>
         <handler
               class="com.lambda.plugin.yunit.actions.RunFunctestsAction"
               commandId="com.lambda.plugin.yunit.RunFunctestStaging">
            <activeWhen>
               <with
                     variable="activeWorkbenchWindow.activePerspective">
                  <or>
                     <equals
                           value="org.eclipse.jdt.ui.JavaPerspective">
                     </equals>
                     <equals
                           value="org.eclipse.debug.ui.DebugPerspective">
                     </equals></or>
               </with>
            </activeWhen>
         </handler>
         <handler
               class="com.lambda.plugin.yunit.actions.RunFunctestsAction"
               commandId="com.lambda.plugin.yunit.RunFunctestProduction">
            <activeWhen>
               <with
                     variable="activeWorkbenchWindow.activePerspective">
                  <or>
                     <equals
                           value="org.eclipse.jdt.ui.JavaPerspective">
                     </equals>
                     <equals
                           value="org.eclipse.debug.ui.DebugPerspective">
                     </equals>
                  </or>
               </with>
            </activeWhen>
         </handler>
         <handler
               class="com.lambda.plugin.impex.editor.actions.ToggleLineCommentAction"
               commandId="com.lambda.plugin.impex.editor.actions.ToggleLineComment">
            <enabledWhen>
               <reference
                     definitionId="inImpexEditor">
               </reference>
            </enabledWhen>
         </handler>
         
      </extension>
      <extension
            point="org.eclipse.ui.propertyPages">
         <page
               class="com.lambda.plugin.yunit.properties.YUnitPropertyPage"
               id="com.lambda.plugin.yunit.properties.samplePropertyPage"
               name="Functional Tests"
               nameFilter="*"
               objectClass="org.eclipse.jdt.core.IJavaProject">
            <enabledWhen>
               <and>
                  <test
                        property="projectNature"
                        value="com.lambda.ynature">
                  </test>
                  <adapt
                        type="org.eclipse.core.resources.IProject">
                  </adapt>
               </and>
            </enabledWhen>
         </page>
      </extension>
      <extension
            point="org.eclipse.ui.editors">
         <editor
               class="com.lambda.plugin.impex.editor.ImpexEditor"
               contributorClass="com.lambda.plugin.impex.editor.actions.ImpexEditorActionContributor"
               extensions="impex"
               icon="icons/sample.gif"
               id="com.lambda.plugin.impex.editor.ImpexEditor"
               name="ImpEx Editor">
            <contentTypeBinding
                  contentTypeId="com.lambda.plugin.impexFile">
            </contentTypeBinding>
         </editor>
      </extension>
      <extension
            id="com.lambda.plugin.impex.ImpexAnnotationModelFactory"
            name="com.lambda.plugin.impex.ImpexAnnotationModelFactory"
            point="org.eclipse.core.filebuffers.annotationModelCreation">
         <factory
               class="com.lambda.plugin.impex.editor.ImpexAnnotationModelFactory"
               extensions="impex">
         </factory>
      </extension>
      <extension
            point="org.eclipse.core.expressions.definitions">
         <definition
               id="inImpexEditor">
            <with
                  variable="activeEditorId">
               <equals
                     value="com.lambda.plugin.impex.editor.ImpexEditor">
               </equals>
            </with>
         </definition>
      </extension>
	<extension id="impexFileProblem" name="%Impex.marker.label" point="org.eclipse.core.resources.markers">
  		<super type="org.eclipse.core.resources.problemmarker" />
  		<!-- for annotations -->
    <super
          type="org.eclipse.core.resources.textmarker">
    </super> 
  			<persistent value="true" /> 
	</extension>
 <extension
       point="org.eclipse.core.contenttype.contentTypes">
    <content-type
          file-extensions="impex"
          id="com.lambda.plugin.impexFile"
          name="Impex File"
          priority="normal">
    </content-type>
 </extension>

</plugin>
